{"version":3,"sources":["redux-store/hooks/useSelectSuperheroById.js","components/Wrapper/Wrapper.jsx","components/Layout/Layout.jsx","redux-store/hooks/useFavoriteSuperhero.js","components/SuperheroCard/SuperheroCard.jsx","components/SearchBar/SearchBar.jsx","components/Editable/Editable.jsx","pages/superhero/Superhero.jsx","redux-store/hooks/useGetSuperhero.js"],"names":["useSelectSuperheroById","id","superhero","useSelector","state","selectSuperheroById","useStyles","makeStyles","theme","paper","width","display","flexWrap","alignItems","padding","spacing","border","palette","divider","background","Wrapper","props","children","classes","Paper","elevation","className","variant","drawerWidth","root","appBar","boxShadow","shadows","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","appBarInner","flexGrow","menuButton","marginRight","hide","drawer","position","flexShrink","drawerPaper","appBarHeader","content","mixins","toolbar","flexDirection","height","minHeight","contentContainer","link","Layout","title","appBarChildren","useState","open","setOpen","AppBar","color","clsx","Toolbar","IconButton","edge","onClick","Typography","noWrap","Grid","container","justifyContent","item","xs","Drawer","anchor","List","ListItem","ContainerComponent","Button","component","Link","to","ListItemIcon","ListItemText","primary","Divider","useFavoriteSuperhero","isFavorite","selectIsFavoriteSuperhero","useIsFavoriteSuperhero","dispatch","useDispatch","add","addToFavorite","remove","removeFromFavorite","toggle","marginTop","containerVertical","containerHorizontal","header","headerWrapper","top","left","right","bottom","headerWrapperVertical","headerWrapperHorizontal","imageVertical","imageHorizontal","SuperheroCard","layout","isVerticalLayout","Card","CardActionArea","CardMedia","image","url","name","CardContent","gutterBottom","biography","publisher","CardActions","searchBar","option","textDecoration","SearchBar","setName","useQuery","SuperheroApi","fetchSearchedByName","keepPreviousData","enabled","length","data","isFetching","searchByName","useMemo","debounce","leading","searchedList","useSearchSuperhero","Autocomplete","freeSolo","disableClearable","options","getOptionLabel","renderOption","renderInput","params","TextField","label","size","margin","InputProps","endAdornment","CircularProgress","onInput","event","target","value","Editable","contentEditable","onChange","styles","InputBase","readOnly","spinner","Fullscreen","useRowStyles","borderBottom","defaultRenderValue","Array","isArray","join","noop","Row","isContentEditable","renderValue","isOpened","setIsOpened","useSetState","setContent","latestOnChange","useLatest","useUpdateEffect","current","TableRow","TableCell","isOpen","scope","style","paddingBottom","paddingTop","colSpan","Collapse","unmountOnExit","in","timeout","Box","Table","TableBody","Object","keys","map","key","index","capitalize","kebabCase","replace","Superhero","useParams","useEffect","fetchSuperheroById","selectSuperheroFetchingStatusFromPool","isSuccess","isLoading","isError","useGetSuperhero","useToggle","toggleIsContentEditable","handleChange","editCharacter","FormControlLabel","control","Switch","checked","powerstats","appearance","work","connections"],"mappings":"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","file":"static/js/SuperheroPage.210ec847.chunk.js","sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { selectSuperheroById } from 'redux-store/rootReducer';\r\n\r\nexport const useSelectSuperheroById = id => {\r\n  const superhero = useSelector(state => selectSuperheroById(state, id));\r\n  return { superhero };\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0.5),\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    background: 'transparent',\r\n  },\r\n}));\r\n\r\nexport const Wrapper = props => {\r\n  const { children } = props;\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper elevation={0} className={classes.paper} variant={'elevation'}>\r\n      {children}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  Wrapper.displayName = 'Wrapper';\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport Button from '@material-ui/core/Button';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nimport { Wrapper } from 'components/Wrapper';\r\n\r\nconst drawerWidth = 280;\r\n\r\nconst useStyles = makeStyles(theme => {\r\n  return ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      boxShadow: theme.shadows[10],\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      marginLeft: drawerWidth,\r\n      transition: theme.transitions.create(['margin', 'width'], {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    appBarInner: {\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      position: 'absolute',\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      boxShadow: theme.shadows[20],\r\n    },\r\n    appBarHeader: {\r\n      '&::before': {\r\n        content: '\"\"',\r\n        display: 'block',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n      },\r\n    },\r\n    content: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      flexGrow: 1,\r\n      height: '100vh',\r\n      minHeight: '500px',\r\n    },\r\n    contentContainer: {\r\n      flexGrow: 1,\r\n    },\r\n    link: {\r\n      display: 'flex',\r\n      width: '100%',\r\n    },\r\n  });\r\n});\r\n\r\nexport const Layout = props => {\r\n  const { title, children, appBarChildren } = props;\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleDrawerOpen = () => setOpen(true);\r\n\r\n  const handleDrawerClose = () => setOpen(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position={'fixed'}\r\n        color={'default'}\r\n        className={clsx(classes.appBar, { [classes.appBarShift]: open })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            edge={'start'}\r\n            color={'inherit'}\r\n            className={classes.menuButton}\r\n            onClick={open ? handleDrawerClose : handleDrawerOpen}\r\n          >\r\n            {open ? <ChevronLeftIcon/> : <MenuIcon/>}\r\n          </IconButton>\r\n          <Typography noWrap variant={'h6'}>\r\n            {title}\r\n          </Typography>\r\n          <div className={classes.appBarInner}>\r\n            <Grid container justifyContent={'flex-end'}>\r\n              <Grid item xs={10}>\r\n                <Wrapper>\r\n                  {appBarChildren}\r\n                </Wrapper>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        open={open}\r\n        className={classes.drawer}\r\n        variant={'persistent'}\r\n        anchor={'left'}\r\n        classes={{ paper: classes.drawerPaper }}\r\n      >\r\n        <List>\r\n          <ListItem ContainerComponent={'li'}>\r\n            <Button component={Link} to={'/'} className={classes.link}>\r\n              <ListItemIcon><HomeIcon/></ListItemIcon>\r\n              <ListItemText primary={'Home'}/>\r\n            </Button>\r\n          </ListItem>\r\n          <Divider/>\r\n          <ListItem ContainerComponent={'li'}>\r\n            <Button component={Link} to={'/favorites'} className={classes.link}>\r\n              <ListItemIcon><FavoriteIcon/></ListItemIcon>\r\n              <ListItemText primary={'Favorites'}/>\r\n            </Button>\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={clsx(classes.content, classes.appBarHeader)}>\r\n        <div className={classes.contentContainer}>\r\n          {children}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  Layout.displayName = 'Layout';\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { selectIsFavoriteSuperhero } from 'redux-store/rootReducer';\r\nimport { addToFavorite, removeFromFavorite } from 'redux-store/favorite/favoriteSlice';\r\n\r\nexport const useIsFavoriteSuperhero = id =>\r\n  useSelector(state => selectIsFavoriteSuperhero(state, id));\r\n\r\nexport const useFavoriteSuperhero = id => {\r\n  const isFavorite = useIsFavoriteSuperhero(id);\r\n\r\n  const dispatch = useDispatch();\r\n  const add = () => dispatch(addToFavorite({ id }));\r\n  const remove = () => dispatch(removeFromFavorite({ id }));\r\n  const toggle = () => dispatch(isFavorite ? removeFromFavorite({ id }) : addToFavorite({ id }));\r\n\r\n  return { isFavorite, add, remove, toggle };\r\n};\r\n","import { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\nimport clsx from 'clsx';\r\n\r\nimport { useFavoriteSuperhero } from 'redux-store/hooks/useFavoriteSuperhero';\r\nimport { useSelectSuperheroById } from 'redux-store/hooks/useSelectSuperheroById';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: 'flex',\r\n    width: `calc(100% - ${theme.spacing(1) * 2}px)`,\r\n    marginTop: 25,\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  containerVertical: {\r\n    flexDirection: 'column',\r\n    height: 425,\r\n  },\r\n  containerHorizontal: {\r\n    height: 150,\r\n  },\r\n  header: {\r\n    flexGrow: 1,\r\n  },\r\n  headerWrapper: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: 'flex',\r\n  },\r\n  headerWrapperVertical: {\r\n    flexDirection: 'column',\r\n  },\r\n  headerWrapperHorizontal: {\r\n    flexDirection: 'row',\r\n  },\r\n  imageVertical: {\r\n    height: '75%',\r\n    width: '100%',\r\n  },\r\n  imageHorizontal: {\r\n    width: 100,\r\n    flexShrink: 0,\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport const SuperheroCard = props => {\r\n  const { id, layout = 'vertical' } = props;\r\n  const classes = useStyles();\r\n  const { isFavorite, toggle } = useFavoriteSuperhero(id);\r\n  const { superhero = {} } = useSelectSuperheroById(id);\r\n\r\n  const isVerticalLayout = layout === 'vertical';\r\n  return (\r\n    <Card className={clsx(classes.container, {\r\n      [classes.containerVertical]: isVerticalLayout,\r\n      [classes.containerHorizontal]: !isVerticalLayout,\r\n    })}>\r\n      <CardActionArea component={Link} to={`/superhero/${id}`} className={classes.header}>\r\n        <div className={clsx(classes.headerWrapper, {\r\n          [classes.headerWrapperVertical]: isVerticalLayout,\r\n          [classes.headerWrapperHorizontal]: !isVerticalLayout,\r\n        })}>\r\n          <CardMedia\r\n            className={clsx({\r\n              [classes.imageVertical]: isVerticalLayout,\r\n              [classes.imageHorizontal]: !isVerticalLayout,\r\n            })}\r\n            image={superhero.image?.url}\r\n            title={superhero.name}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {superhero.name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {superhero.biography?.publisher}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <IconButton onClick={toggle}>\r\n          {isFavorite ? <Favorite/> : <FavoriteBorder/>}\r\n        </IconButton>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  SuperheroCard.displayName = 'SuperheroCard';\r\n}\r\n","import React, { useMemo, useState } from 'react';\r\nimport { useQuery } from 'react-query';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport debounce from 'lodash/debounce';\r\n\r\nimport { SuperheroApi } from 'api/superhero';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useSearchSuperhero = () => {\r\n  const [name, setName] = useState('');\r\n\r\n  const { data = [], isFetching } = useQuery(\r\n    ['home', 'search', name],\r\n    () => SuperheroApi.fetchSearchedByName({ name }),\r\n    {\r\n      keepPreviousData: true,\r\n      enabled: typeof name === 'string' && name.length > 2,\r\n    },\r\n  );\r\n\r\n  const searchByName = useMemo(() => {\r\n    return debounce(setName, 500, { leading: true });\r\n  }, []);\r\n\r\n  return { searchedList: name.length > 0 ? data : [], isFetching, searchByName };\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  searchBar: { flexGrow: 1 },\r\n  option: {\r\n    display: 'block',\r\n    width: '100%',\r\n    textDecoration: 'none',\r\n  },\r\n});\r\n\r\nexport const SearchBar = () => {\r\n  const classes = useStyles();\r\n  const { searchedList, isFetching, searchByName } = useSearchSuperhero();\r\n\r\n  return (\r\n    <Autocomplete\r\n      freeSolo\r\n      disableClearable\r\n      options={searchedList}\r\n      className={classes.searchBar}\r\n      getOptionLabel={superhero => superhero.name}\r\n      renderOption={option => (\r\n        <Typography\r\n          noWrap\r\n          component={Link}\r\n          to={`/superhero/${option.id}`}\r\n          color={'primary'}\r\n          className={classes.option}\r\n        >\r\n          {option.name}\r\n        </Typography>\r\n      )}\r\n      renderInput={params => (\r\n        <TextField\r\n          {...params}\r\n          label={'Search'}\r\n          size={'small'}\r\n          margin={'none'}\r\n          variant={'outlined'}\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: isFetching ? <CircularProgress size={20}/> : null,\r\n          }}\r\n          onInput={event => searchByName(event.target.value)}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  SearchBar.displayName = 'HomeSearchBar';\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport React from 'react';\r\nimport { InputBase } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'block',\r\n    width: '100%',\r\n  },\r\n});\r\n\r\nexport const Editable = props => {\r\n  const { contentEditable, value, onChange } = props;\r\n  const styles = useStyles();\r\n\r\n  const handleChange = event => {\r\n    onChange(event.target.value ? event.target.value : '');\r\n  };\r\n\r\n  return (\r\n    <InputBase\r\n      readOnly={!contentEditable}\r\n      value={value}\r\n      className={styles.root}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  Editable.displayName = 'Editable';\r\n}\r\n","import { Fragment, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useLatest, useToggle, useUpdateEffect } from 'react-use';\r\nimport useSetState from 'react-use/lib/useSetState';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport capitalize from 'lodash/capitalize';\r\nimport kebabCase from 'lodash/kebabCase';\r\n\r\nimport {\r\n  IconButton,\r\n  CircularProgress,\r\n  TableCell,\r\n  TableRow,\r\n  Table,\r\n  TableBody,\r\n  Collapse,\r\n  Box,\r\n  Grid,\r\n  Switch,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport KeyboardArrowDown from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUp from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nimport { useGetSuperhero } from 'redux-store/hooks/useGetSuperhero';\r\nimport { editCharacter } from 'redux-store/superheroes/superheroesSlice';\r\n\r\nimport { SearchBar } from 'components/SearchBar';\r\nimport { Layout } from 'components/Layout';\r\nimport { Fullscreen } from 'components/Fullscreen';\r\nimport { SuperheroCard } from 'components/SuperheroCard';\r\nimport { Editable } from 'components/Editable';\r\n\r\nconst spinner = (\r\n  <Fullscreen>\r\n    <CircularProgress size={100}/>\r\n  </Fullscreen>\r\n);\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst defaultRenderValue = value => {\r\n  return Array.isArray(value) ? value.join(', ') : value;\r\n};\r\n\r\nconst noop = () => {};\r\n\r\nconst Row = props => {\r\n  const { isContentEditable = false, name, data, renderValue = defaultRenderValue, onChange = noop } = props;\r\n\r\n  const [isOpened, setIsOpened] = useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  const handleToggle = () => setIsOpened(isOpen => !isOpen);\r\n  const [content, setContent] = useSetState(data);\r\n\r\n  const latestOnChange = useLatest(onChange);\r\n  useUpdateEffect(() => {\r\n    if (isContentEditable) {\r\n      latestOnChange.current(content);\r\n    }\r\n  }, [content]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton size={'small'} onClick={handleToggle}>\r\n            {isOpened ? <KeyboardArrowUp/> : <KeyboardArrowDown/>}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component={'th'} scope={'row'}>\r\n          {name}\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={2}>\r\n          <Collapse unmountOnExit in={isOpened} timeout={'auto'}>\r\n            <Box margin={2}>\r\n              <Table size={'small'}>\r\n                <TableBody>\r\n                  {Object.keys(data).map((key, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell width={'25%'} component={'th'}>{capitalize(kebabCase(key).replace('-', ' '))}</TableCell>\r\n                      <TableCell width={'75%'}>\r\n                        <Editable\r\n                          value={renderValue(content[key])}\r\n                          contentEditable={isContentEditable}\r\n                          onChange={value => setContent({ [key]: value })}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst Superhero = () => {\r\n  const styles = useStyles();\r\n  const { id } = useParams();\r\n  const { superhero, isSuccess, isLoading } = useGetSuperhero(id);\r\n  const [isContentEditable, toggleIsContentEditable] = useToggle(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const handleChange = ({ key, value }) => {\r\n    dispatch(editCharacter({ id, data: { ...superhero, [key]: value } }));\r\n  };\r\n\r\n  return (\r\n    <Layout title={isSuccess ? superhero.name : '...'} appBarChildren={<SearchBar/>}>\r\n      {isLoading ? spinner : isSuccess ? (\r\n        <div className={styles.root}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={3}>\r\n              <SuperheroCard id={id}/>\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              <FormControlLabel\r\n                label={'Edit'}\r\n                control={\r\n                  <Switch color={'primary'} checked={isContentEditable} onChange={toggleIsContentEditable}/>\r\n                }\r\n              />\r\n\r\n              <Editable\r\n                value={superhero.name}\r\n                contentEditable={isContentEditable}\r\n                onChange={value => handleChange({ key: 'name', value })}\r\n              />\r\n\r\n              <Table>\r\n                <TableBody>\r\n                  <Row\r\n                    isContentEditable={isContentEditable}\r\n                    name={'Powerstats'}\r\n                    data={superhero.powerstats}\r\n                    onChange={value => handleChange({ key: 'powerstats', value })}\r\n                  />\r\n                  <Row\r\n                    isContentEditable={isContentEditable}\r\n                    name={'Biography'}\r\n                    data={superhero.biography}\r\n                    onChange={value => handleChange({ key: 'biography', value })}\r\n                  />\r\n                  <Row\r\n                    isContentEditable={isContentEditable}\r\n                    name={'Appearance'}\r\n                    data={superhero.appearance}\r\n                    onChange={value => handleChange({ key: 'appearance', value })}\r\n                  />\r\n                  <Row\r\n                    isContentEditable={isContentEditable}\r\n                    name={'Work'}\r\n                    data={superhero.work}\r\n                    onChange={value => handleChange({ key: 'work', value })}\r\n                  />\r\n                  <Row\r\n                    isContentEditable={isContentEditable}\r\n                    name={'Connections'}\r\n                    data={superhero.connections}\r\n                    onChange={value => handleChange({ key: 'connections', value })}\r\n                  />\r\n                </TableBody>\r\n              </Table>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      ) : null}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Superhero;\r\n\r\nif (process.env.NODE_ENV !== 'production') {\r\n  Superhero.displayName = 'Home';\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectSuperheroFetchingStatusFromPool } from 'redux-store/rootReducer';\r\n\r\nimport { fetchSuperheroById } from 'redux-store/superheroes/superheroesSlice';\r\nimport { useSelectSuperheroById } from 'redux-store/hooks/useSelectSuperheroById';\r\n\r\nexport const useGetSuperhero = id => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchSuperheroById({ id }));\r\n  }, [id, dispatch]);\r\n\r\n  const { superhero } = useSelectSuperheroById(id);\r\n  const { isSuccess, isLoading, isError } = useSelector(state => selectSuperheroFetchingStatusFromPool(state, id));\r\n\r\n  return { superhero, isSuccess, isLoading, isError };\r\n};\r\n"],"sourceRoot":""}