{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.jsx","components/input/index.js","components/input/input.jsx","components/search-panel/index.js","components/search-panel/search-panel.jsx","components/button/index.js","components/button/button.jsx","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.jsx","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.jsx","components/todo-list/index.js","components/todo-list/todo-list.jsx","components/item-add-form/index.js","components/item-add-form/item-add-form.jsx","components/app/app.jsx","components/app/index.js","index.js"],"names":["AppHeader","_ref","todos","all","length","done","filter","todo","more","react_default","a","createElement","className","Input","props","Object","objectWithoutProperties","assign","type","classnames","defineProperty","SearchPanel","state","term","handleChange","target","value","_this","onSearchTodo","setState","components_input","this","onChange","placeholder","Component","Button","ItemStatusFilter","buttons","status","ALL","label","IMPORTANT","ACTIVE","DONE","_this2","currentStatus","map","components_button","onClick","onFilterTodo","btn-light","btn-outline-light","key","TodoListItem","editMode","handleSubmit","event","preventDefault","handleToggleEditMode","trim","onLabelChange","id","renderEditForm","renderDisplay","_this$props","important","onDelete","onToggleImportant","onToggleDone","text-warning todo-list-item--important","todo-list-item--done","role","xmlns","viewBox","fill","d","title","text-white","text-warning","onSubmit","TodoList","onDeleteTodo","onToggleImportantTodo","onToggleDoneTodo","react_addons_css_transition_group_default","component","transitionName","transitionEnterTimeout","transitionLeaveTimeout","transitionAppear","transitionAppearTimeout","_ref2","todoProps","components_todo_list_item","ItemAddForm","handleFormSubmit","onAddTodo","handleLabelChange","App","maxId","initialData","objectSpread","handleFilterTodo","handleSearchTodo","handleToggleDoneTodo","toggleTodosProperty","handleToggleImportantTodo","handleDeleteTodo","handleAddTodo","concat","toConsumableArray","arr","toLowerCase","search","propName","_this$state","visibleTodo","filterTodo","searchTodo","app_header","search_panel","item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","app","todoData","document","getElementById"],"mappings":"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","file":"static/js/main.6c3d948e.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\nexport default AppHeader;","import React from 'react';\r\n\r\nexport default function AppHeader({ todos }) {\r\n    let all = todos.length;\r\n    let done = todos.filter(todo => todo.done).length;\r\n    let more = all - done;\r\n    \r\n    return (\r\n        <header className=\"card-header d-flex\">\r\n            <h1 className=\"card-title m-0\">To-do</h1>\r\n\r\n            <ul className=\"mb-0 ml-auto list-group list-group-horizontal text-right\">\r\n                <li className=\"list-group-item d-flex align-items-center\">\r\n                    <strong className=\"mr-2\">All:</strong> {all}\r\n                </li>\r\n                <li className=\"list-group-item d-flex align-items-center\">\r\n                    <strong className=\"mr-2\">Done:</strong> {done}\r\n                </li>\r\n                <li className=\"list-group-item d-flex align-items-center\">\r\n                    <strong className=\"mr-2\">More:</strong> {more}\r\n                </li>\r\n            </ul>\r\n        </header>\r\n    );\r\n}","import Input from './input';\r\nexport default Input;","import React from 'react';\r\nimport classnames from 'classnames'\r\n\r\nimport './input.css';\r\n\r\nexport default function Input({ className, ...props }) {\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            className={classnames('input form-control border-light btn btn-outline-light w-auto flex-grow-1 bg-transparent text-white', {\r\n                [className]: !!className\r\n            })}\r\n            {...props} />\r\n    );\r\n}","import SearchPanel from './search-panel';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport Input from '../input';\r\n\r\nexport default class SearchPanel extends Component {\r\n    state = {\r\n        term: ''\r\n    };\r\n\r\n    handleChange = ({ target: { value: term } }) => {\r\n        this.props.onSearchTodo(term);\r\n        this.setState({ term });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Input\r\n                value={this.state.term}\r\n                onChange={this.handleChange}\r\n                placeholder=\"Search\" />\r\n        );\r\n    }\r\n}","import Button from './button';\r\nexport default Button;","import React from 'react';\r\n\r\nexport default function Button(props) {\r\n    return (\r\n        <button\r\n            type={props.type ? props.type : 'button'}\r\n            className=\"btn\"\r\n            {...props}>\r\n        </button>\r\n    );\r\n}","import ItemStatusFilter from './item-status-filter';\r\nexport default ItemStatusFilter;","import React, { Component } from 'react';\r\nimport classnames from 'classnames'\r\nimport Button from '../button';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n    buttons = [\r\n        { status: this.props.status.ALL, label: 'All' },\r\n        { status: this.props.status.IMPORTANT, label: 'Important' },\r\n        { status: this.props.status.ACTIVE, label: 'Active' },\r\n        { status: this.props.status.DONE, label: 'Done' }\r\n    ];\r\n\r\n    render() {\r\n        const { currentStatus } = this.props;\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {this.buttons.map(({ status, label }) =>\r\n                    <Button\r\n                        onClick={() => this.props.onFilterTodo(status)}\r\n                        className={classnames('btn', {\r\n                            'btn-light': status === currentStatus,\r\n                            'btn-outline-light': status !== currentStatus,\r\n                        })}\r\n                        key={status}>\r\n\r\n                        {label}\r\n                    </Button>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}","import TodoListItem from './todo-list-item';\r\nexport default TodoListItem;","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport Button from '../button';\r\nimport Input from '../input';\r\n\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component {\r\n    state = {\r\n        editMode: false,\r\n        label: this.props.label\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.handleToggleEditMode();\r\n\r\n        let label = this.state.label.trim();\r\n        if (label && label !== this.props.label) {\r\n            this.props.onLabelChange(this.props.id, this.state.label);\r\n        }\r\n        else {\r\n            this.setState({ label: this.props.label });\r\n        }\r\n    };\r\n\r\n    handleChange = ({ target: { value: label } }) => {\r\n        this.setState({ label });\r\n    };\r\n\r\n    handleToggleEditMode = () => {\r\n        this.setState((state) => {\r\n            return { editMode: !state.editMode };\r\n        });\r\n    };\r\n\r\n    get renderDisplay() {\r\n        const { label, important, done, onDelete, onToggleImportant, onToggleDone } = this.props;\r\n        return (\r\n            <div className=\"d-flex align-items-start\">\r\n                <span\r\n                    onClick={onToggleDone}\r\n                    className={\r\n                        classnames('todo-list-item--label d-flex align-items-start', {\r\n                            'text-warning todo-list-item--important': important,\r\n                            'todo-list-item--done': done\r\n                        })\r\n                    }>\r\n\r\n                    <Button\r\n                        className=\"btn p-0 shadow-none\">\r\n                        <svg className=\"todo-list-item--icon\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n                            {done\r\n                                ? <path fill=\"currentColor\" d=\"M400 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V80c0-26.51-21.49-48-48-48zm0 400H48V80h352v352zm-35.864-241.724L191.547 361.48c-4.705 4.667-12.303 4.637-16.97-.068l-90.781-91.516c-4.667-4.705-4.637-12.303.069-16.971l22.719-22.536c4.705-4.667 12.303-4.637 16.97.069l59.792 60.277 141.352-140.216c4.705-4.667 12.303-4.637 16.97.068l22.536 22.718c4.667 4.706 4.637 12.304-.068 16.971z\"></path>\r\n                                : <path fill=\"currentColor\" d=\"M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-6 400H54c-3.3 0-6-2.7-6-6V86c0-3.3 2.7-6 6-6h340c3.3 0 6 2.7 6 6v340c0 3.3-2.7 6-6 6z\"></path>\r\n                            }\r\n                        </svg>\r\n                    </Button>\r\n\r\n                    <span className=\"px-3\">\r\n                        {label}\r\n                    </span>\r\n                </span>\r\n\r\n                <div className=\"ml-auto btn-group\">\r\n                    <Button\r\n                        title=\"Delete to-do\"\r\n                        onClick={onDelete}\r\n                        className=\"btn p-0 text-white mr-3 shadow-none\">\r\n\r\n                        <svg className=\"todo-list-item--icon\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n                            <path fill=\"currentColor\" d=\"M268 416h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12zM432 80h-82.41l-34-56.7A48 48 0 0 0 274.41 0H173.59a48 48 0 0 0-41.16 23.3L98.41 80H16A16 16 0 0 0 0 96v16a16 16 0 0 0 16 16h16v336a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128h16a16 16 0 0 0 16-16V96a16 16 0 0 0-16-16zM171.84 50.91A6 6 0 0 1 177 48h94a6 6 0 0 1 5.15 2.91L293.61 80H154.39zM368 464H80V128h288zm-212-48h24a12 12 0 0 0 12-12V188a12 12 0 0 0-12-12h-24a12 12 0 0 0-12 12v216a12 12 0 0 0 12 12z\"></path>\r\n                        </svg>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        title=\"Change label\"\r\n                        onClick={this.handleToggleEditMode}\r\n                        className=\"btn p-0 text-white mr-3 shadow-none\">\r\n\r\n                        <svg className=\"todo-list-item--icon\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\r\n                            <path fill=\"currentColor\" d=\"M402.3 344.9l32-32c5-5 13.7-1.5 13.7 5.7V464c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h273.5c7.1 0 10.7 8.6 5.7 13.7l-32 32c-1.5 1.5-3.5 2.3-5.7 2.3H48v352h352V350.5c0-2.1.8-4.1 2.3-5.6zm156.6-201.8L296.3 405.7l-90.4 10c-26.2 2.9-48.5-19.2-45.6-45.6l10-90.4L432.9 17.1c22.9-22.9 59.9-22.9 82.7 0l43.2 43.2c22.9 22.9 22.9 60 .1 82.8zM460.1 174L402 115.9 216.2 301.8l-7.3 65.3 65.3-7.3L460.1 174zm64.8-79.7l-43.2-43.2c-4.1-4.1-10.8-4.1-14.8 0L436 82l58.1 58.1 30.9-30.9c4-4.2 4-10.8-.1-14.9z\"></path>\r\n                        </svg>\r\n                    </Button>\r\n\r\n                    <Button\r\n                        title=\"Important to-do\"\r\n                        onClick={onToggleImportant}\r\n                        className={classnames('btn p-0 shadow-none', {\r\n                            'text-white': !important,\r\n                            'text-warning': important\r\n                        })}>\r\n                        <svg className=\"todo-list-item--icon\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\">\r\n                            {important\r\n                                ? <path fill=\"currentColor\" d=\"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\"></path>\r\n                                : <path fill=\"currentColor\" d=\"M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\"></path>\r\n                            }\r\n                        </svg>\r\n                    </Button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    get renderEditForm() {\r\n        return (\r\n            <form\r\n                onSubmit={this.handleSubmit}\r\n                className=\"h-100 flex-grow-1 d-flex\">\r\n                <Input\r\n                    value={this.state.label}\r\n                    onChange={this.handleChange}\r\n                    placeholder=\"Change label\" />\r\n                <Button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-light\">\r\n                    <svg className=\"todo-list-item--icon todo-list-item--icon_save\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\r\n                        <path fill=\"currentColor\" d=\"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 0 1 1.757 4.243V426a6 6 0 0 1-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z\"></path>\r\n                    </svg>\r\n                </Button>\r\n            </form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"todo-list-item p-3 w-100\">\r\n                {this.state.editMode ? this.renderEditForm : this.renderDisplay}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import TodoList from './todo-list';\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item';\r\nimport CSSTransitionGroup from 'react-addons-css-transition-group'\r\n\r\nimport './todo-list.css';\r\n\r\nexport default function TodoList({ todos, onDeleteTodo, onToggleImportantTodo, onToggleDoneTodo, onLabelChange }) {\r\n    return (\r\n        <div className=\"todo-list card-body\">\r\n            <CSSTransitionGroup\r\n                component=\"ul\"\r\n                transitionName=\"todo-list--slide\"\r\n                transitionEnterTimeout={300}\r\n                transitionLeaveTimeout={300}\r\n                transitionAppear={true}\r\n                transitionAppearTimeout={1000}\r\n                className=\"list-group\">\r\n                {todos.length\r\n                    ? todos.map(({ id, ...todoProps }) =>\r\n                        <li\r\n                            className=\"border border-light d-flex align-items-center list-group-item p-0 my-1 shadow\"\r\n                            key={id}>\r\n                            <TodoListItem\r\n                                id={id}\r\n                                onToggleDone={() => onToggleDoneTodo(id)}\r\n                                onToggleImportant={() => onToggleImportantTodo(id)}\r\n                                onDelete={() => onDeleteTodo(id)}\r\n                                onLabelChange={onLabelChange}\r\n                                {...todoProps} />\r\n                        </li>\r\n                    )\r\n                    : <li className=\"list-group-item text-center text-muted\">No to-dos</li>\r\n                }\r\n            </CSSTransitionGroup>\r\n        </div>\r\n    );\r\n}","import ItemAddForm from './item-add-form';\r\nexport default ItemAddForm;","import React, { Component } from 'react';\r\nimport Button from '../button';\r\nimport Input from '../input';\r\n\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    handleFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        let label = this.state.label.trim();\r\n\r\n        if (label) {\r\n            this.props.onAddTodo(this.state.label);\r\n            this.setState({ label: '' });\r\n        }\r\n    }\r\n\r\n    handleLabelChange = ({ target: { value: label } }) => {\r\n        this.setState({ label });\r\n    };\r\n\r\n    render() {\r\n        let { label } = this.state;\r\n\r\n        return (\r\n            <footer className=\"card-footer\">\r\n                <form\r\n                    onSubmit={this.handleFormSubmit}\r\n                    className=\"d-flex\">\r\n\r\n                    <Input\r\n                        onChange={this.handleLabelChange}\r\n                        value={label}\r\n                        placeholder=\"What needs to be done\" />\r\n\r\n                    <Button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-light\">\r\n                        Add todo\r\n                    </Button>\r\n\r\n                </form>\r\n            </footer>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport TodoList from '../todo-list';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nexport default class App extends Component {\r\n    maxId = 100;\r\n\r\n    static status = {\r\n        ALL: 'all',\r\n        ACTIVE: 'active',\r\n        DONE: 'done',\r\n        IMPORTANT: 'important',\r\n    };\r\n\r\n    state = {\r\n        todos: this.props.initialData,\r\n        term: '',\r\n        filter: App.status.ALL,\r\n    };\r\n\r\n    get id() {\r\n        return this.maxId++;\r\n    }\r\n\r\n    handleLabelChange = (id, label) => {\r\n        this.setState((state) => {\r\n            const todos = state.todos.map((todo) => {\r\n                if (todo.id === id) {\r\n                    return { ...todo, label }\r\n                }\r\n\r\n                return todo;\r\n            });\r\n            return { todos };\r\n        });\r\n    };\r\n\r\n    handleFilterTodo = (filter) => {\r\n        this.setState({ filter });\r\n    };\r\n\r\n    filterTodo(arr, filter) {\r\n        switch (filter) {\r\n            case App.status.ALL:\r\n                return arr;\r\n            case App.status.ACTIVE:\r\n                return arr.filter((todo) => !todo.done);\r\n            case App.status.DONE:\r\n                return arr.filter((todo) => todo.done);\r\n            case App.status.IMPORTANT:\r\n                return arr.filter((todo) => todo.important);\r\n            default:\r\n                return arr;\r\n        }\r\n    }\r\n\r\n    searchTodo(arr, label) {\r\n        if (label.length === 0) return arr;\r\n\r\n        return arr.filter((todo) => {\r\n            if (todo.label.toLowerCase().search(label.toLowerCase()) > -1) {\r\n                return todo;\r\n            }\r\n\r\n            return null;\r\n        });\r\n    }\r\n\r\n    handleSearchTodo = (term) => {\r\n        this.setState({ term });\r\n    };\r\n\r\n    toggleTodosProperty(arr, id, propName) {\r\n        return arr.map((todo) => {\r\n            if (todo.id === id) {\r\n                return { ...todo, [propName]: !todo[propName] }\r\n            }\r\n\r\n            return todo;\r\n        });\r\n    }\r\n\r\n    handleToggleDoneTodo = (id) => {\r\n        this.setState((state) => {\r\n            const todos = this.toggleTodosProperty(state.todos, id, 'done');\r\n            return { todos };\r\n        });\r\n    };\r\n\r\n    handleToggleImportantTodo = (id) => {\r\n        this.setState((state) => {\r\n            const todos = this.toggleTodosProperty(state.todos, id, 'important');\r\n            return { todos };\r\n        });\r\n    };\r\n\r\n    handleDeleteTodo = (id) => {\r\n        this.setState((state) => {\r\n            const todos = state.todos.filter((todo) => (todo.id !== id) ? todo : null);\r\n            return { todos };\r\n        });\r\n    };\r\n\r\n    handleAddTodo = (label) => {\r\n        const todo = {\r\n            label,\r\n            id: this.id,\r\n            important: false,\r\n            done: false\r\n        };\r\n\r\n        this.setState((state) => {\r\n            return { todos: [...state.todos, todo] }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { todos, term, filter } = this.state;\r\n        const visibleTodo = this.filterTodo(\r\n            this.searchTodo(todos, term),\r\n            filter\r\n        );\r\n\r\n        return (\r\n            <div className=\"card shadow\">\r\n                <AppHeader\r\n                    todos={todos} />\r\n                <div className=\"card-header m-0 d-flex\">\r\n                    <SearchPanel\r\n                        onSearchTodo={this.handleSearchTodo} />\r\n                    <ItemStatusFilter\r\n                        onFilterTodo={this.handleFilterTodo}\r\n                        currentStatus={this.state.filter}\r\n                        status={App.status} />\r\n                </div>\r\n                <TodoList\r\n                    onLabelChange={this.handleLabelChange}\r\n                    onToggleDoneTodo={this.handleToggleDoneTodo}\r\n                    onToggleImportantTodo={this.handleToggleImportantTodo}\r\n                    onDeleteTodo={this.handleDeleteTodo}\r\n                    todos={visibleTodo} />\r\n                <ItemAddForm\r\n                    onAddTodo={this.handleAddTodo} />\r\n            </div>\r\n        );\r\n    }\r\n}","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\nimport todoData from './data/todo-list';\r\n\r\nimport './styles/bootstrap.css';\r\nimport './styles/styles.css';\r\n\r\n\r\nReactDOM.render(<App initialData={todoData} />, document.getElementById('root'));"],"sourceRoot":""}