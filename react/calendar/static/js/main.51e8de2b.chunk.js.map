{"version":3,"sources":["components/Calendar/calendar.js","components/Calendar/index.jsx","App.jsx","index.js"],"names":["DAYS_IN_WEEK","WEEK_IN_MONTH","isEqual","a","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","monthStartOn","date","dayOfWeek","getDay","getDayOfWeek","Date","currentMonthDay","prevMonthDay","getDaysInMonth","cellWeek","cellDay","Calendar","state","_this","props","currentDate","selectedDate","handlePrevMonthButtonClick","setState","handleNextMonthButtonClick","handleSelectChange","yearSelect","value","monthSelect","handleDayClick","onChange","_this2","this","_this$props","years","monthNames","weekDayNames","_this$state","monthData","calendar","react_default","createElement","className","title","buttonMonthNames","prev","onClick","next","ref","element","map","name","index","key","_ref","short","full","week","classnames","text-muted","btn-light","border border-light","border-dark","Component","defaultProps","Function","prototype","App","handleDateChange","toLocaleDateString","Calendar_Calendar","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.51e8de2b.chunk.js","sourcesContent":["const DAYS_IN_WEEK = 7;\r\nconst WEEK_IN_MONTH = 6;\r\n\r\nexport function getDaysInMonth(year, month) {\r\n    return new Date(year, month, 0).getDate();\r\n}\r\n\r\nexport function getDayOfWeek(date) {\r\n    const dayOfWeek = date.getDay();\r\n    return dayOfWeek === 0 ? 6 : dayOfWeek - 1;\r\n}\r\n\r\nexport function isEqual(a, b) {\r\n    if (!a || !b) return false;\r\n\r\n    return (\r\n        a.getFullYear() === b.getFullYear() &&\r\n        a.getMonth() === b.getMonth() &&\r\n        a.getDate() === b.getDate()\r\n    );\r\n}\r\n\r\nexport function getMonthData(year, month) {\r\n    const result = [];\r\n    const date = new Date(year, month);\r\n    const monthStartOn = getDayOfWeek(date);\r\n    const daysInMonth = getDaysInMonth(year, month);\r\n\r\n    let currentMonthDay = 1;\r\n    let prevMonthDay = (daysInMonth - monthStartOn) + 1;\r\n\r\n    for (let cellWeek = 0; cellWeek < WEEK_IN_MONTH; cellWeek++) {\r\n        result[cellWeek] = [];\r\n        \r\n        for (let cellDay = 0; cellDay < DAYS_IN_WEEK; cellDay++) {\r\n            if (cellWeek === 0 && cellDay < monthStartOn) {\r\n                result[cellWeek][cellDay] = new Date(year, month - 1, prevMonthDay++);\r\n            }\r\n            else {\r\n                result[cellWeek][cellDay] = new Date(year, month, currentMonthDay++);\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}","import React, { Component } from 'react';\r\nimport classnames from 'classnames';\r\nimport * as calendar from './calendar';\r\n\r\nexport default class Calendar extends Component {\r\n    static defaultProps = {\r\n        onChange: Function.prototype,\r\n\r\n        date: new Date(),\r\n        years: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', '2020'],\r\n        monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n        buttonMonthNames: {\r\n            next: 'Следующий месяц',\r\n            prev: 'Предыдущий месяц',\r\n        },\r\n        weekDayNames: [\r\n            {\r\n                short: 'Пн',\r\n                full: 'Понедельник'\r\n            },\r\n            {\r\n                short: 'Вт',\r\n                full: 'Вторник'\r\n            },\r\n            {\r\n                short: 'Ср',\r\n                full: 'Среда'\r\n            },\r\n            {\r\n                short: 'Чт',\r\n                full: 'Четверг'\r\n            },\r\n            {\r\n                short: 'Пт',\r\n                full: 'Пятница'\r\n            },\r\n            {\r\n                short: 'Сб',\r\n                full: 'Суббота'\r\n            },\r\n            {\r\n                short: 'Вс',\r\n                full: 'Воскресенье'\r\n            }\r\n        ]\r\n    };\r\n\r\n    state = {\r\n        date: this.props.date,\r\n        currentDate: new Date(),\r\n        selectedDate: null\r\n    };\r\n\r\n    get year() {\r\n        return this.state.date.getFullYear();\r\n    };\r\n\r\n    get month() {\r\n        return this.state.date.getMonth();\r\n    };\r\n\r\n    get day() {\r\n        return this.state.date.getDate();\r\n    };\r\n\r\n    handlePrevMonthButtonClick = () => {\r\n        const date = new Date(this.year, this.month - 1);\r\n        this.setState({ date });\r\n    };\r\n\r\n    handleNextMonthButtonClick = () => {\r\n        const date = new Date(this.year, this.month + 1);\r\n        this.setState({ date });\r\n    };\r\n\r\n    handleSelectChange = () => {\r\n        const year = this.yearSelect.value;\r\n        const month = this.monthSelect.value;\r\n\r\n        const date = new Date(year, month);\r\n        this.setState({ date });\r\n    };\r\n\r\n    handleDayClick = (date) => {\r\n        this.setState({ selectedDate: date });\r\n        this.props.onChange(date);\r\n    };\r\n\r\n    render() {\r\n        const { years, monthNames, weekDayNames } = this.props;\r\n        const { currentDate, selectedDate } = this.state;\r\n        const monthData = calendar.getMonthData(this.year, this.month);\r\n\r\n        return (\r\n            <div className=\"calendar card bg-dark shadow rounded-0 border-top-0\">\r\n                <header className=\"card-header d-flex rounded-0\">\r\n                    <div className=\"btn-group mr-3\">\r\n                        <button\r\n                            className=\"btn btn-light\"\r\n                            title={this.props.buttonMonthNames.prev}\r\n                            onClick={this.handlePrevMonthButtonClick}>\r\n                            \r\n                            ❮\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-light\"\r\n                            title={this.props.buttonMonthNames.next}\r\n                            onClick={this.handleNextMonthButtonClick}>\r\n\r\n                            ❯\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"input-group\">\r\n                        <select\r\n                            value={this.month}\r\n                            ref={element => this.monthSelect = element}\r\n                            onChange={this.handleSelectChange}\r\n                            className=\"form-control btn-light\">\r\n\r\n                            {monthNames.map((name, index) =>\r\n                                <option key={name} value={index}>{name}</option>\r\n                            )}\r\n                        </select>\r\n                        <select\r\n                            value={this.year}\r\n                            ref={element => this.yearSelect = element}\r\n                            onChange={this.handleSelectChange}\r\n                            className=\"form-control btn-light\">\r\n\r\n                            {years.map(year =>\r\n                                <option key={year} value={year}>{year}</option>\r\n                            )}\r\n                        </select>\r\n                    </div>\r\n                </header>\r\n                <section className=\"card-body\">\r\n                    <table className=\"table table-borderless text-center m-0\">\r\n                        <thead>\r\n                            <tr>\r\n                                {weekDayNames.map(({ short: name, full: title }) =>\r\n                                    <th key={name} title={title} className=\"pb-4 text-white\">{name}</th>\r\n                                )}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {monthData.map((week, index) =>\r\n                                <tr key={index}>\r\n                                    {week.map((date, index) => date ?\r\n                                        <td className=\"p-1\" key={index}>\r\n                                            <button\r\n                                                className={classnames('btn h-100 w-100 rounded-0', {\r\n                                                    'text-muted': date.getMonth() !== this.month,\r\n                                                    'btn-light': calendar.isEqual(date, currentDate),\r\n\r\n                                                    'border border-light': calendar.isEqual(date, selectedDate),\r\n                                                    'border-dark': !calendar.isEqual(date, selectedDate) && !calendar.isEqual(date, currentDate)\r\n                                                })}\r\n                                                onClick={() => this.handleDayClick(date)}>\r\n\r\n                                                {date.getDate()}</button>\r\n                                        </td> :\r\n                                        <td key={index} />\r\n                                    )}\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport Calendar from './components/Calendar';\n\nclass App extends Component {\n    state = {\n        date: null\n    };\n\n    handleDateChange = date => this.setState({ date });\n\n    render() {\n        let date = this.state.date ? this.state.date : new Date();\n\n        return (\n            <div className=\"container\">\n                <div className=\"row justify-content-center pt-5\">\n                    <div className=\"col-xl-6 col-lg-8 col-md-10 pt-5\">\n                        <div className=\"card bg-dark text-light rounded-0\">\n                            <header className=\"card-header border-bottom-0 rounded-0\"><strong>Выбранная дата:</strong> {date.toLocaleDateString()}</header>\n                        </div>\n                        <Calendar\n                            onChange={this.handleDateChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/bootstrap.min.css';\nimport './styles/styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}